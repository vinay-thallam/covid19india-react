{"version":3,"sources":["components/row.js","components/table.js","components/level.js","constants.js","components/choropleth.js","components/mapexplorer.js","components/timeseries.js","components/minigraph.js","components/home.js","components/navbar.js","components/links.js","components/summary.js","components/cluster.js","components/faq.js","components/banner.js","App.js","serviceWorker.js","index.js"],"names":["Row","props","useState","state","setState","districts","setDistricts","useEffect","sort","handleReveal","aDistricts","Fragment","className","reveal","style","display","total","onClick","onMouseEnter","onHighlightState","index","onMouseLeave","touchstart","fontWeight","color","delta","confirmed","parseInt","active","recovered","deaths","window","innerWidth","title","Unknown","Object","keys","map","district","toLowerCase","key","Table","states","setStates","revealedStates","setRevealedStates","count","setCount","sortColumn","isAscending","sortData","setSortData","summary","slice","reduce","a","length","i","getDistricts","axios","get","then","response","data","catch","err","console","log","setInterval","handleSort","e","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","value1","value2","unshift","doSort","animationDelay","districtData","Level","setData","setConfirmed","setActive","recoveries","setRecoveries","setDeaths","parseData","deltas","confirmeddelta","recovereddelta","deceaseddelta","MAP_TYPES","propertyFieldMap","country","highlightRegionInMap","name","mapType","propertyField","d3","classed","d","nodes","properties","parentNode","appendChild","ChoroplethMap","statistic","mapData","setHoveredRegion","mapMeta","changeMap","choroplethMap","useRef","remove","geoDataFile","current","ready","renderData","geoData","svg","width","attr","height","projection","center","scale","translate","path","onceTouchedRegion","append","selectAll","topojson","objects","graphObjectName","features","enter","n","maxConfirmed","on","handleMouseover","target","text","value","parseFloat","toFixed","toTitleCase","str","split","charAt","toUpperCase","join","cells","label","domain","genLength","generatedLabels","labelDelimiter","Math","floor","n1","n2","Array","from","legendLinear","legendColor","shapeWidth","titleWidth","labels","orient","select","call","id","viewBox","preserveAspectRatio","ref","India","Assam","Bihar","Chhattisgarh","Delhi","Karnataka","Kerala","Goa","Gujarat","Haryana","Jharkhand","Ladakh","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Odisha","Punjab","Rajasthan","Sikkim","Telangana","Tripura","Uttarakhand","stateDistrictWiseData","stateHighlighted","currentHoveredRegion","setCurrentHoveredRegion","currentMap","setCurrentMap","region","getRegionFromState","undefined","regionHighlighted","useMemo","currentMapData","acc","districtWiseData","filter","getRegionFromDistrict","switchMapToState","newMap","topDistrict","b","TimeSeries","timeseries","setTimeseries","datapoint","setDatapoint","setIndex","mode","setMode","update","setUpdate","graphElement1","graphElement2","graphElement3","graphElement4","graphElement5","graphElement6","graphData","refreshGraphs","graphs","svg1","svg2","svg3","svg4","svg5","svg6","margin","dateMin","Date","setDate","getDate","dateMax","x","range","indexScale","svgArray","dataTypes","colors","yScales","_","focus","y","mouseout","forEach","mousemove","xm","this","round","invert","f","j","s","ticks","tickPadding","tickFormat","tick","dots","datum","curve","type","Minigraph","y1","path1","totalLength1","node","getTotalLength","transition","duration","animate","path2","totalLength2","path3","totalLength3","path4","totalLength4","Home","setStateDistrictWiseData","fetched","setFetched","graphOption","setGraphOption","lastUpdated","setLastUpdated","setDeltas","timeseriesMode","setTimeseriesMode","setStateHighlighted","getStates","Promise","all","stateDistrictWiseResponse","statewise","cases_time_series","lastupdatedtime","key_values","formatDate","unformattedDate","day","month","year","time","isNaN","parse","formatDistance","zonedTimeToUtc","htmlFor","checked","onChange","event","Navbar","view","setView","location","pathname","src","to","Links","href","Summary","alt","Cluster","referrerPolicy","FAQ","faq","setFaq","getFAQs","error","question","answer","Banner","snippets","setSnippets","snippet","setSnippet","start","date","localStorage","getItem","differenceInMilliseconds","toISOString","difference","setDifference","getSnippets","interval","snippetChooser","clearInterval","min","max","random","factoids","banner","history","require","createBrowserHistory","App","render","exact","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister","message"],"mappings":"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","file":"static/js/main.c70432bb.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react'\nimport * as Icon from 'react-feather'\n\nfunction Row(props) {\n  const [state, setState] = useState(props.state)\n  const [districts, setDistricts] = useState(props.districts)\n\n  useEffect(() => {\n    setState(props.state)\n  }, [props.state])\n\n  useEffect(() => {\n    setDistricts(props.districts)\n  }, [props.districts])\n\n  useEffect(() => {\n    sort(districts)\n  }, [districts])\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state)\n  }\n\n  const sort = (aDistricts) => {\n    return aDistricts\n  }\n\n  return (\n    <React.Fragment>\n      <span\n        className={`dropdown ${\n          props.reveal ? 'rotateRightDown' : 'rotateDownRight'\n        }`}\n        style={{ display: !props.total ? '' : 'none' }}\n        onClick={() => {\n          handleReveal()\n        }}\n      >\n        <Icon.ChevronDown />\n      </span>\n      <tr\n        className={props.total ? 'is-total' : ''}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        touchstart={() => props.onHighlightState?.(state, props.index)}\n        onClick={() => {\n          handleReveal()\n        }}\n      >\n        <td style={{ fontWeight: 600 }}>{state.state}</td>\n        <td>\n          <span className=\"deltas\" style={{ color: '#ff073a' }}>\n            {!state.delta.confirmed == 0 && <Icon.ArrowUp />}\n            {state.delta.confirmed > 0 ? `${state.delta.confirmed}` : ''}\n          </span>\n          {parseInt(state.confirmed) === 0 ? '-' : state.confirmed}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          {/* <span className=\"deltas\" style={{color: '#007bff'}}>\n            {!state.delta.active==0 && <Icon.ArrowUp/>}\n            {state.delta.active>0 ? `${state.delta.active}` : ''}\n          </span>*/}\n          {parseInt(state.active) === 0 ? '-' : state.active}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          {/* <span className=\"deltas\" style={{color: '#28a745'}}>\n            {!state.delta.recovered==0 && <Icon.ArrowUp/>}\n            {state.delta.recovered > 0 ? `${state.delta.recovered}` : ''}\n          </span>*/}\n          {parseInt(state.recovered) === 0 ? '-' : state.recovered}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          {/* <span className=\"deltas\" style={{color: '#6c757d'}}>\n            {!state.delta.deaths==0 && <Icon.ArrowUp/>}\n            {state.delta.deaths>0 ? `${state.delta.deaths}` : ''}\n          </span>*/}\n          {parseInt(state.deaths) === 0 ? '-' : state.deaths}\n        </td>\n      </tr>\n\n      <tr\n        className={`spacer`}\n        style={{ display: props.reveal && !props.total ? '' : 'none' }}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n\n      <tr\n        className={`district-heading`}\n        style={{ display: props.reveal && !props.total ? '' : 'none' }}\n      >\n        <td>District</td>\n        <td>\n          <abbr\n            className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n            title=\"Confirmed\"\n          >\n            {window.innerWidth <= 769\n              ? window.innerWidth <= 375\n                ? 'Confirmed'\n                : 'Confirmed'\n              : 'Confirmed'}\n          </abbr>\n        </td>\n        {/* <td><abbr className={`${window.innerWidth <=769 ? 'is-blue' : ''}`} title=\"Active\">{window.innerWidth <=769 ? window.innerWidth <=375 ? 'A' : 'Actv' : 'Active'}</abbr></td>\n        <td><abbr className={`${window.innerWidth <=769 ? 'is-green' : ''}`} title=\"Recovered\">{window.innerWidth <=769 ? window.innerWidth <=375 ? 'R' : 'Rcvrd' : 'Recovered'}</abbr></td>\n        <td><abbr className={`${window.innerWidth <=769 ? 'is-gray' : ''}`} title=\"Deaths\">{window.innerWidth <=769 ? window.innerWidth <=375 ? 'D' : 'Dcsd' : 'Deceased'}</abbr></td>*/}\n      </tr>\n\n      {districts?.Unknown && (\n        <tr\n          className={`district`}\n          style={{ display: props.reveal && !props.total ? '' : 'none' }}\n        >\n          <td style={{ fontWeight: 600 }}>Unknown</td>\n          <td>{districts['Unknown'].confirmed}</td>\n          {/* <td>{districts['Unknown'].active}</td>\n        <td>{districts['Unknown'].recovered}</td>\n        <td>{districts['Unknown'].deaths}</td>*/}\n        </tr>\n      )}\n\n      {Object.keys(districts ? districts : {}).map((district, index) => {\n        if (district.toLowerCase() !== 'unknown') {\n          return (\n            <tr\n              key={index}\n              className={`district`}\n              style={{ display: props.reveal && !props.total ? '' : 'none' }}\n            >\n              <td style={{ fontWeight: 600 }}>{district}</td>\n              <td>{districts[district].confirmed}</td>\n              {/* <td>{districts[district].active}</td>\n               <td>{districts[district].recovered}</td>\n                <td>{districts[district].deaths}</td>*/}\n            </tr>\n          )\n        }\n      })}\n\n      <tr\n        className={`spacer`}\n        style={{ display: props.reveal && !props.total ? '' : 'none' }}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  )\n}\n\nexport default Row\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react'\nimport * as Icon from 'react-feather'\nimport axios from 'axios'\n\nimport Row from './row'\n\nfunction Table(props) {\n  const [states, setStates] = useState(props.states)\n  const [revealedStates, setRevealedStates] = useState({})\n  const [districts, setDistricts] = useState({})\n  const [count, setCount] = useState(0)\n  const [sortData, setSortData] = useState({\n    sortColumn: 'confirmed',\n    isAscending: false,\n  })\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9))\n    } else {\n      setStates(props.states)\n    }\n  }, [props.states])\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        props.states.reduce((a, state) => {\n          return { ...a, [state.state]: false }\n        }, {}),\n      )\n    }\n  }, [props.states])\n\n  useEffect(() => {\n    if (states.length > 0) {\n      let length = 0\n\n      props.states.map((state, i) => {\n        if (i !== 0 && state.confirmed > 0) length += 1\n        if (i === props.states.length - 1) setCount(length)\n      })\n    }\n  }, [states.length])\n\n  useEffect(() => {\n    getDistricts()\n  }, [1])\n\n  const getDistricts = () => {\n    axios\n      .get('https://api.covid19india.org/state_district_wise.json')\n      .then((response) => {\n        setDistricts(response.data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n  // make a axios call every 10minutes\n  setInterval(getDistricts, 600000)\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1)\n    {\n      /* console.log(totalRow);*/\n    }\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn\n      let value1 = StateData1[sortColumn]\n      let value2 = StateData2[sortColumn]\n\n      if (sortColumn != 'state') {\n        value1 = parseInt(StateData1[sortColumn])\n        value2 = parseInt(StateData2[sortColumn])\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 == value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 == value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1\n      }\n    })\n    {\n      /* console.log(states);*/\n    }\n    states.unshift(totalRow[0])\n  }\n\n  const handleSort = (e, props) => {\n    const currentsortColumn = e.currentTarget\n      .querySelector('abbr')\n      .getAttribute('title')\n      .toLowerCase()\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending:\n        sortData.sortColumn == currentsortColumn\n          ? !sortData.isAscending\n          : sortData.sortColumn === 'state',\n    })\n  }\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    })\n  }\n\n  doSort()\n\n  return (\n    <table className=\"table fadeInUp\" style={{ animationDelay: '1s' }}>\n      <h5 className=\"affected-count\">{count} States/UTS Affected</h5>\n      <thead>\n        <tr>\n          <th\n            className=\"sticky state-heading\"\n            onClick={(e) => handleSort(e, props)}\n          >\n            <div className=\"heading-content\">\n              <abbr title=\"State\">State/UT</abbr>\n              <div\n                style={{\n                  display: sortData.sortColumn === 'state' ? 'initial' : 'none',\n                }}\n              >\n                {sortData.isAscending ? <Icon.ArrowDown /> : <Icon.ArrowUp />}\n              </div>\n            </div>\n          </th>\n          <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n            <div className=\"heading-content\">\n              <abbr\n                className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                title=\"Confirmed\"\n              >\n                {window.innerWidth <= 769\n                  ? window.innerWidth <= 375\n                    ? 'C'\n                    : 'Cnfmd'\n                  : 'Confirmed'}\n              </abbr>\n              <div\n                style={{\n                  display:\n                    sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n                }}\n              >\n                {sortData.isAscending ? <Icon.ArrowDown /> : <Icon.ArrowUp />}\n              </div>\n            </div>\n          </th>\n          <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n            <div className=\"heading-content\">\n              <abbr\n                className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\n                title=\"Active\"\n              >\n                {window.innerWidth <= 769\n                  ? window.innerWidth <= 375\n                    ? 'A'\n                    : 'Actv'\n                  : 'Active'}\n              </abbr>\n              <div\n                style={{\n                  display:\n                    sortData.sortColumn === 'active' ? 'initial' : 'none',\n                }}\n              >\n                {sortData.isAscending ? <Icon.ArrowDown /> : <Icon.ArrowUp />}\n              </div>\n            </div>\n          </th>\n          <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n            <div className=\"heading-content\">\n              <abbr\n                className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\n                title=\"Recovered\"\n              >\n                {window.innerWidth <= 769\n                  ? window.innerWidth <= 375\n                    ? 'R'\n                    : 'Rcvrd'\n                  : 'Recovered'}\n              </abbr>\n              <div\n                className={\n                  sortData.sortColumn === 'recovered' ? 'sort-black' : ''\n                }\n              ></div>\n              <div\n                style={{\n                  display:\n                    sortData.sortColumn === 'recovered' ? 'initial' : 'none',\n                }}\n              >\n                {sortData.isAscending ? <Icon.ArrowDown /> : <Icon.ArrowUp />}\n              </div>\n            </div>\n          </th>\n          <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n            <div className=\"heading-content\">\n              <abbr\n                className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                title=\"Deaths\"\n              >\n                {window.innerWidth <= 769\n                  ? window.innerWidth <= 375\n                    ? 'D'\n                    : 'Dcsd'\n                  : 'Deceased'}\n              </abbr>\n              <div\n                style={{\n                  display:\n                    sortData.sortColumn === 'deaths' ? 'initial' : 'none',\n                }}\n              >\n                {sortData.isAscending ? <Icon.ArrowDown /> : <Icon.ArrowUp />}\n              </div>\n            </div>\n          </th>\n        </tr>\n      </thead>\n\n      {states.map((state, index) => {\n        if (index !== 0 && state.confirmed > 0) {\n          return (\n            <tbody>\n              <Row\n                key={index}\n                index={index}\n                state={state}\n                total={false}\n                reveal={revealedStates[state.state]}\n                districts={\n                  Object.keys(districts).length - 1 > 0\n                    ? districts[state.state].districtData\n                    : []\n                }\n                onHighlightState={props.onHighlightState}\n                handleReveal={handleReveal}\n              />\n            </tbody>\n          )\n        }\n      })}\n\n      <tbody>\n        {states.length > 1 && props.summary === false && (\n          <Row key={0} state={states[0]} total={true} />\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default Table\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react'\n\nfunction Level(props) {\n  const [data, setData] = useState(props.data)\n  const [confirmed, setConfirmed] = useState(0)\n  const [active, setActive] = useState(0)\n  const [recoveries, setRecoveries] = useState(0)\n  const [deaths, setDeaths] = useState(0)\n\n  useEffect(() => {\n    setData(props.data)\n    parseData()\n  })\n\n  const parseData = () => {\n    let confirmed = 0\n    let active = 0\n    let recoveries = 0\n    let deaths = 0\n    data.map((state, index) => {\n      if (index !== 0) {\n        confirmed += parseInt(state.confirmed)\n        active += parseInt(state.active)\n        recoveries += parseInt(state.recovered)\n        deaths += parseInt(state.deaths)\n      }\n    })\n    setConfirmed(confirmed)\n    setActive(active)\n    setRecoveries(recoveries)\n    setDeaths(deaths)\n  }\n\n  return (\n    <div className=\"Level fadeInUp\" style={{ animationDelay: '0.8s' }}>\n      <div className=\"level-item is-cherry\">\n        <h5>Confirmed</h5>\n        <h4>\n          [\n          {props.deltas\n            ? props.deltas.confirmeddelta >= 0\n              ? '+' + props.deltas.confirmeddelta\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1>{confirmed} </h1>\n      </div>\n\n      <div className=\"level-item is-blue\">\n        <h5 className=\"heading\">Active</h5>\n        <h4>&nbsp;</h4>\n        {/* <h4>[{props.deltas ? props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta) >=0 ? '+'+(props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta)).toString() : '+0' : ''}]</h4>*/}\n        <h1 className=\"title has-text-info\">{active}</h1>\n      </div>\n\n      <div className=\"level-item is-green\">\n        <h5 className=\"heading\">Recovered</h5>\n        <h4>\n          [\n          {props.deltas\n            ? props.deltas.recovereddelta >= 0\n              ? '+' + props.deltas.recovereddelta\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">{recoveries} </h1>\n      </div>\n\n      <div className=\"level-item is-gray\">\n        <h5 className=\"heading\">Deceased</h5>\n        <h4>\n          [\n          {props.deltas\n            ? props.deltas.deceaseddelta >= 0\n              ? '+' + props.deltas.deceaseddelta\n              : '+0'\n            : ''}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{deaths}</h1>\n      </div>\n    </div>\n  )\n}\n\nexport default Level\n","export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n}\n\nexport const MAPS_DIR = '/maps'\n","/* eslint-disable react/prop-types */\nimport React, { useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\nimport { legendColor } from 'd3-svg-legend'\nimport * as topojson from 'topojson'\nimport { MAP_TYPES } from '../constants'\n\nconst propertyFieldMap = {\n  country: 'ST_NM',\n  state: 'district',\n}\n\nexport const highlightRegionInMap = (name, mapType) => {\n  const propertyField = propertyFieldMap[mapType]\n  const paths = d3.selectAll('.path-region')\n  paths.classed('map-hover', (d, i, nodes) => {\n    if (name == d.properties[propertyField]) {\n      nodes[i].parentNode.appendChild(nodes[i])\n      return true\n    }\n    return false\n  })\n}\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n}) {\n  // const [states, setStates] = useState(props.states);\n  // const [state, setState] = useState({});\n  const choroplethMap = useRef(null)\n\n  useEffect(() => {\n    ;(async () => {\n      d3.selectAll('svg#chart > *').remove()\n      const data = await d3.json(mapMeta.geoDataFile)\n      if (statistic && choroplethMap.current) {\n        ready(data)\n        renderData()\n        // setState(states[1]);\n      }\n    })()\n  }, [mapMeta.geoDataFile])\n\n  const handleMouseover = (name) => {\n    try {\n      setHoveredRegion(name, mapMeta.mapType)\n    } catch (err) {\n      console.log('err', err)\n    }\n  }\n\n  const propertyField = propertyFieldMap[mapMeta.mapType]\n  const maxInterpolation = 0.8\n\n  function ready(geoData) {\n    const svg = d3.select(choroplethMap.current)\n    const width = +svg.attr('width')\n    const height = +svg.attr('height')\n\n    const projection = d3\n      .geoMercator()\n      .center(mapMeta.center)\n      .scale(mapMeta.scale)\n      .translate([width / 2, height / 2])\n\n    const path = d3.geoPath(projection)\n\n    let onceTouchedRegion = null\n\n    svg\n      .append('g')\n      .attr('class', 'states')\n      .selectAll('path')\n      .data(\n        topojson.feature(geoData, geoData.objects[mapMeta.graphObjectName])\n          .features,\n      )\n      .enter()\n      .append('path')\n      .attr('class', 'path-region')\n      .attr('fill', function (d) {\n        const n = mapData[d.properties[propertyField]] || 0\n        const color =\n          n == 0\n            ? '#ffffff'\n            : d3.interpolateReds(\n                (maxInterpolation * n) / (statistic.maxConfirmed || 0.001),\n              )\n        return color\n      })\n      .attr('d', path)\n      .attr('pointer-events', 'all')\n      .on('mouseover', (d) => {\n        handleMouseover(d.properties[propertyField])\n        const target = d3.event.target\n        d3.select(target.parentNode.appendChild(target)).attr(\n          'class',\n          'map-hover',\n        )\n      })\n      .on('mouseleave', (d) => {\n        const target = d3.event.target\n        d3.select(target).attr('class', 'path-region map-default')\n        if (onceTouchedRegion == d) onceTouchedRegion = null\n      })\n      .on('touchstart', (d) => {\n        if (onceTouchedRegion == d) onceTouchedRegion = null\n        else onceTouchedRegion = d\n      })\n      .on('click', (d) => {\n        if (onceTouchedRegion) {\n          return\n        }\n        if (mapMeta.mapType === MAP_TYPES.STATE) {\n          return\n        }\n        changeMap(d.properties[propertyField], mapMeta.mapType)\n      })\n      .style('cursor', 'pointer')\n      .append('title')\n      .text(function (d) {\n        const value = mapData[d.properties[propertyField]] || 0\n        return (\n          parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2) +\n          '% from ' +\n          toTitleCase(d.properties[propertyField])\n        )\n      })\n\n    svg\n      .append('path')\n      .attr('stroke', '#ff073a20')\n      .attr('fill', 'none')\n      .attr('stroke-width', 2)\n      .attr(\n        'd',\n        path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName])),\n      )\n  }\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ')\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1)\n    }\n    return str.join(' ')\n  }\n\n  const renderData = () => {\n    const svg = d3.select(choroplethMap.current)\n\n    // Colorbar\n    const maxInterpolation = 0.8\n    const color = d3\n      .scaleSequential(d3.interpolateReds)\n      .domain([0, statistic.maxConfirmed / maxInterpolation || 10])\n\n    let cells = null\n    let label = null\n\n    label = ({ i, genLength, generatedLabels, labelDelimiter }) => {\n      if (i === genLength - 1) {\n        const n = Math.floor(generatedLabels[i])\n        return `${n}+`\n      } else {\n        const n1 = 1 + Math.floor(generatedLabels[i])\n        const n2 = Math.floor(generatedLabels[i + 1])\n        return `${n1} - ${n2}`\n      }\n    }\n\n    const numCells = 6\n    const delta = Math.floor(\n      (statistic.maxConfirmed < numCells ? numCells : statistic.maxConfirmed) /\n        (numCells - 1),\n    )\n\n    cells = Array.from(Array(numCells).keys()).map((i) => i * delta)\n\n    svg\n      .append('g')\n      .attr('class', 'legendLinear')\n      .attr('transform', 'translate(1, 375)')\n\n    const legendLinear = legendColor()\n      .shapeWidth(50)\n      .cells(cells)\n      .titleWidth(3)\n      .labels(label)\n      .title('Confirmed Cases')\n      .orient('vertical')\n      .scale(color)\n\n    svg.select('.legendLinear').call(legendLinear)\n  }\n\n  return (\n    <div className=\"svg-parent\">\n      <svg\n        id=\"chart\"\n        width=\"650\"\n        height=\"450\"\n        viewBox=\"0 0 650 450\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        ref={choroplethMap}\n      ></svg>\n    </div>\n  )\n}\n\nexport default ChoroplethMap\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useMemo } from 'react'\nimport ChoroplethMap, { highlightRegionInMap } from './choropleth'\nimport { MAP_TYPES, MAPS_DIR } from '../constants'\n\nconst mapMeta = {\n  India: {\n    name: 'India',\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'india',\n    center: [78.9, 22],\n    scale: 1000,\n  },\n  'Andaman and Nicobar Islands': {\n    name: 'Andaman and Nicobar Islands',\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andamannicobarislands_district',\n    center: [92, 8],\n    scale: 4000,\n  },\n  'Arunachal Pradesh': {\n    name: 'Arunachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'arunachalpradesh_district',\n    center: [94, 27],\n    scale: 1000,\n  },\n  'Andhra Pradesh': {\n    name: 'Andhra Pradesh',\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'andhrapradesh_district',\n    center: [80, 16],\n    scale: 3200,\n  },\n\n  Assam: {\n    name: 'Assam',\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'assam_district',\n    center: [92, 26],\n    scale: 4500,\n  },\n  Bihar: {\n    name: 'Bihar',\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'bihar_district',\n    center: [85, 25],\n    scale: 6000,\n  },\n  Chhattisgarh: {\n    name: 'Chhattisgarh',\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chhattisgarh_district',\n    center: [82, 21],\n    scale: 4500,\n  },\n  Delhi: {\n    name: 'Delhi',\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'delhi_1997-2012_district',\n    center: [77, 28.5],\n    scale: 30000,\n  },\n  Karnataka: {\n    name: 'Karnataka',\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'karnataka_district',\n    center: [76, 15.05],\n    scale: 4900,\n  },\n  Kerala: {\n    name: 'Kerala',\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kerala_district',\n    center: [76, 10.5],\n    scale: 5000,\n  },\n  Goa: {\n    name: 'Goa',\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'goa_district',\n    center: [74, 15],\n    scale: 20000,\n  },\n  Gujarat: {\n    name: 'Gujarat',\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'gujarat_district_2011',\n    center: [70.5, 22],\n    scale: 4000,\n  },\n  Haryana: {\n    name: 'Haryana',\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'haryana_district',\n    center: [76, 29],\n    scale: 8000,\n  },\n  'Himachal Pradesh': {\n    name: 'Himachal Pradesh',\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'himachalpradesh_district',\n    center: [77, 32],\n    scale: 7000,\n  },\n  'Jammu and Kashmir': {\n    name: 'Jammu and Kashmir',\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jammukashmir_district',\n    center: [75, 34],\n    scale: 5000,\n  },\n  Jharkhand: {\n    name: 'Jharkhand',\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'jharkhand_district',\n    center: [85, 23],\n    scale: 4500,\n  },\n  Ladakh: {\n    name: 'Ladakh',\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'ladakh_district',\n    center: [76, 33],\n    scale: 3000,\n  },\n  'Madhya Pradesh': {\n    name: 'Madhya Pradesh',\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'madhyapradesh_district',\n    center: [77, 23],\n    scale: 3000,\n  },\n  Maharashtra: {\n    name: 'Maharashtra',\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'maharashtra_district',\n    center: [75, 18],\n    scale: 3000,\n  },\n  Manipur: {\n    name: 'Manipur',\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'manipur_pre2016_districts',\n    center: [93.5, 24],\n    scale: 9000,\n  },\n  Meghalaya: {\n    name: 'Meghalaya',\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'meghalaya_district',\n    center: [91, 24],\n    scale: 6500,\n  },\n  Mizoram: {\n    name: 'Mizoram',\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mizoram_district',\n    center: [92.5, 23],\n    scale: 10000,\n  },\n  Nagaland: {\n    name: 'Nagaland',\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'nagaland_district',\n    center: [94, 25],\n    scale: 7500,\n  },\n  Odisha: {\n    name: 'Odisha',\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'odisha_district',\n    center: [84, 20],\n    scale: 4000,\n  },\n  Punjab: {\n    name: 'Punjab',\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'punjab_district',\n    center: [75, 30.7],\n    scale: 8000,\n  },\n  Rajasthan: {\n    name: 'Rajasthan',\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'rajasthan_district',\n    center: [73, 25],\n    scale: 3000,\n  },\n  Sikkim: {\n    name: 'Sikkim',\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'sikkim_district',\n    center: [88, 27.5],\n    scale: 15000,\n  },\n  'Tamil Nadu': {\n    name: 'Tamil Nadu',\n    geoDataFile: `${MAPS_DIR}/tamil-nadu.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tamilnadu_district',\n    center: [83, 18],\n    scale: 1500,\n  },\n  Telangana: {\n    name: 'Telangana',\n    geoDataFile: `${MAPS_DIR}/telugana.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'telugana',\n    center: [79, 17],\n    scale: 5000,\n  },\n  Tripura: {\n    name: 'Tripura',\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tripura_district',\n    center: [91.5, 23],\n    scale: 10000,\n  },\n  Uttarakhand: {\n    name: 'Uttarakhand',\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarakhand_district',\n    center: [79, 30],\n    scale: 8000,\n  },\n  'Uttar Pradesh': {\n    name: 'Uttar Pradesh',\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'uttarpradesh_district',\n    center: [80, 27],\n    scale: 3500,\n  },\n\n  'West Bengal': {\n    name: 'West Bengal',\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'westbengal_district',\n    center: [87, 24],\n    scale: 5000,\n  },\n}\n\nexport default function ({ states, stateDistrictWiseData, stateHighlighted }) {\n  // const [states, setStates] = useState(props.states);\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState({})\n  const [currentMap, setCurrentMap] = useState(mapMeta.India)\n\n  useEffect(() => {\n    // setStates(props.states);\n    // setCurrentHoveredRegion()\n  }, [states])\n\n  useEffect(() => {\n    const region = getRegionFromState(states[1])\n    setCurrentHoveredRegion(region)\n  }, [states])\n\n  useEffect(() => {\n    if (currentMap.mapType === MAP_TYPES.STATE) {\n      return\n    }\n\n    if (stateHighlighted === null) {\n      highlightRegionInMap(null, currentMap.mapType)\n    } else {\n      if (stateHighlighted !== undefined) {\n        const regionHighlighted = getRegionFromState(stateHighlighted.state)\n        setCurrentHoveredRegion(regionHighlighted)\n        highlightRegionInMap(regionHighlighted.name, currentMap.mapType)\n      }\n    }\n  }, [stateHighlighted])\n\n  if (!currentHoveredRegion) {\n    return null\n  }\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = { total: 0, maxConfirmed: 0 }\n    let currentMapData = {}\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc\n        }\n        const confirmed = parseInt(state.confirmed)\n        statistic.total += confirmed\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed\n        }\n\n        acc[state.state] = state.confirmed\n        return acc\n      }, {})\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || { districtData: {} }\n      ).districtData\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed)\n        statistic.total += confirmed\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed\n        }\n        acc[district] = districtWiseData[district].confirmed\n        return acc\n      }, {})\n    }\n    return [statistic, currentMapData]\n  }, [currentMap])\n\n  const setHoveredRegion = (name, currentMap) => {\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      setCurrentHoveredRegion(\n        getRegionFromState(states.filter((state) => name === state.state)[0]),\n      )\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const state = stateDistrictWiseData[currentMap.name] || {\n        districtData: {},\n      }\n      let districtData = state.districtData[name]\n      if (!districtData) {\n        districtData = {\n          confirmed: 0,\n          active: 0,\n          deaths: 0,\n          recovered: 0,\n        }\n      }\n      setCurrentHoveredRegion(getRegionFromDistrict(districtData, name))\n    }\n  }\n\n  const getRegionFromDistrict = (districtData, name) => {\n    if (!districtData) {\n      return\n    }\n    const region = { ...districtData }\n    if (!region.name) {\n      region.name = name\n    }\n    return region\n  }\n\n  const getRegionFromState = (state) => {\n    if (!state) {\n      return\n    }\n    const region = { ...state }\n    if (!region.name) {\n      region.name = region.state\n    }\n    return region\n  }\n\n  const switchMapToState = (name) => {\n    const newMap = mapMeta[name]\n    if (!newMap) {\n      return\n    }\n    setCurrentMap(newMap)\n    if (newMap.mapType === MAP_TYPES.COUNTRY) {\n      setHoveredRegion(states[1].state, newMap)\n    } else if (newMap.mapType === MAP_TYPES.STATE) {\n      const districtData = (stateDistrictWiseData[name] || { districtData: {} })\n        .districtData\n      const topDistrict = Object.keys(districtData)\n        .filter((name) => name !== 'Unknown')\n        .sort((a, b) => {\n          return districtData[b].confirmed - districtData[a].confirmed\n        })[0]\n      setHoveredRegion(topDistrict, newMap)\n    }\n  }\n\n  return (\n    <div className=\"MapExplorer fadeInUp\" style={{ animationDelay: '1.2s' }}>\n      <div className=\"header\">\n        <h1>{currentMap.name} Map</h1>\n        <h6>\n          Hover over a{' '}\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? 'state' : 'district'} for\n          more details\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div className=\"stats\">\n          <h5>Confirmed</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.confirmed}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div className=\"stats is-blue\">\n          <h5>Active</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.active || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div className=\"stats is-green\">\n          <h5>Recovered</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.recovered || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n\n        <div className=\"stats is-gray\">\n          <h5>Deceased</h5>\n          <div className=\"stats-bottom\">\n            <h1>{currentHoveredRegion.deaths || ''}</h1>\n            <h6>{}</h6>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meta\">\n        <h2>{currentHoveredRegion.name}</h2>\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('India')}\n          >\n            Back\n          </div>\n        ) : null}\n      </div>\n\n      <ChoroplethMap\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={(region) => setHoveredRegion(region, currentMap)}\n        changeMap={switchMapToState}\n      />\n    </div>\n  )\n}\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\n\nfunction TimeSeries(props) {\n  const [timeseries, setTimeseries] = useState([])\n  const [datapoint, setDatapoint] = useState({})\n  const [index, setIndex] = useState(10)\n  const [mode, setMode] = useState(props.mode)\n  const [update, setUpdate] = useState(-1)\n\n  const graphElement1 = useRef(null)\n  const graphElement2 = useRef(null)\n  const graphElement3 = useRef(null)\n  const graphElement4 = useRef(null)\n  const graphElement5 = useRef(null)\n  const graphElement6 = useRef(null)\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      setTimeseries(props.timeseries)\n    }\n  }, [props.timeseries.length])\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries)\n    }\n  }, [timeseries.length])\n\n  useEffect(() => {\n    setMode(props.mode)\n    setUpdate(update + 1)\n  }, [props.mode])\n\n  useEffect(() => {\n    if (update > 0) {\n      refreshGraphs(graphData)\n    }\n  }, [update])\n\n  const refreshGraphs = () => {\n    const graphs = [\n      graphElement1,\n      graphElement2,\n      graphElement3,\n      graphElement4,\n      graphElement5,\n      graphElement6,\n    ]\n    for (let i = 0; i <= graphs.length; i++) {\n      if (i === graphs.length) {\n        graphData(timeseries)\n        return\n      } else d3.select(graphs[i].current).selectAll('*').remove()\n    }\n  }\n\n  const graphData = (timeseries) => {\n    const data = timeseries\n    setDatapoint(timeseries[timeseries.length - 1])\n    setIndex(timeseries.length - 1)\n\n    const svg1 = d3.select(graphElement1.current)\n    const svg2 = d3.select(graphElement2.current)\n    const svg3 = d3.select(graphElement3.current)\n    const svg4 = d3.select(graphElement4.current)\n    const svg5 = d3.select(graphElement5.current)\n    const svg6 = d3.select(graphElement6.current)\n\n    // Margins\n    const margin = { top: 0, right: 20, bottom: 50, left: 20 }\n    const width = 650 - margin.left - margin.right\n    const height = 200 - margin.top - margin.bottom\n\n    const dateMin = new Date(data[0]['date'] + '2020')\n    dateMin.setDate(dateMin.getDate() - 1)\n    const dateMax = new Date(data[timeseries.length - 1]['date'] + '2020')\n    dateMax.setDate(dateMax.getDate() + 1)\n\n    const x = d3\n      .scaleTime()\n      .domain([dateMin, dateMax])\n      .range([margin.left, width])\n\n    const indexScale = d3\n      .scaleLinear()\n      .domain([0, timeseries.length])\n      .range([margin.left, width])\n\n    // Arrays of objects\n    const svgArray = [svg1, svg2, svg3, svg4, svg5, svg6]\n    const dataTypes = [\n      'totalconfirmed',\n      'totalrecovered',\n      'totaldeceased',\n      'dailyconfirmed',\n      'dailyrecovered',\n      'dailydeceased',\n    ]\n    const colors = [\n      '#ff073a',\n      '#28a745',\n      '#6c757d',\n      '#ff073a',\n      '#28a745',\n      '#6c757d',\n    ]\n    const maxDataTypes = Array.from({ length: svgArray.length }, (_, i) => {\n      return d3.max(data, (d) => {\n        return +d[dataTypes[i]]\n      })\n    })\n    const yScales = maxDataTypes.map((d) => {\n      return d3\n        .scaleLinear()\n        .domain([-d / 10, d])\n        .range([height, margin.top])\n    })\n\n    /* Focus dots */\n    const focus = svgArray.map((d, i) => {\n      const y = mode ? yScales[0] : yScales[i]\n      return d\n        .append('g')\n        .append('circle')\n        .attr('fill', colors[i])\n        .attr('stroke', colors[i])\n        .attr('r', 5)\n        .attr('cx', x(new Date(data[timeseries.length - 1]['date'] + '2020')))\n        .attr('cy', y(data[timeseries.length - 1][dataTypes[i]]))\n    })\n\n    function mouseout() {\n      setDatapoint(data[timeseries.length - 1])\n      setIndex(timeseries.length - 1)\n      focus.forEach((d, i) => {\n        const y = mode ? yScales[0] : yScales[i]\n        d.attr(\n          'cx',\n          x(new Date(data[timeseries.length - 1]['date'] + '2020')),\n        ).attr('cy', y(data[timeseries.length - 1][dataTypes[i]]))\n      })\n    }\n\n    function mousemove() {\n      // eslint-disable-next-line no-invalid-this\n      const xm = d3.mouse(this)[0]\n      const i = Math.round(indexScale.invert(xm))\n      if (0 <= i && i < timeseries.length) {\n        const d = data[i]\n        setDatapoint(d)\n        setIndex(i)\n        focus.forEach((f, j) => {\n          const y = mode ? yScales[0] : yScales[j]\n          f.attr('cx', x(new Date(d['date'] + '2020'))).attr(\n            'cy',\n            y(d[dataTypes[j]]),\n          )\n        })\n      }\n    }\n\n    /* Begin drawing charts */\n    svgArray.forEach((s, i) => {\n      /* X axis */\n      s.append('g')\n        .attr('transform', 'translate(0,' + height + ')')\n        .attr('class', 'axis')\n        .call(d3.axisBottom(x))\n\n      /* Y axis */\n      s.append('g')\n        .attr('transform', `translate(${width}, ${0})`)\n        .attr('class', 'axis')\n        .call(\n          d3\n            .axisRight(mode ? yScales[0] : yScales[i])\n            .ticks(5)\n            .tickPadding(5)\n            .tickFormat((tick) => {\n              if (Math.floor(tick) === tick) return tick\n            }),\n        )\n\n      /* Focus dots */\n      s.on('mousemove', mousemove)\n        .on('touchmove', mousemove)\n        .on('mouseout', mouseout)\n        .on('touchend', mouseout)\n\n      /* Path dots */\n      const dots = s\n        .selectAll('.dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('fill', colors[i])\n        .attr('stroke', colors[i])\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => {\n          return x(new Date(d['date'] + '2020'))\n        })\n        .attr('cy', (d) => {\n          if (mode) return yScales[0](d[dataTypes[i]])\n          return yScales[i](d[dataTypes[i]])\n        })\n\n      /* Paths */\n      if (i < Math.floor(svgArray.length / 2)) {\n        s.append('path')\n          .datum(data)\n          .attr('fill', 'none')\n          .attr('stroke', colors[i] + '99')\n          .attr('stroke-width', 5)\n          .attr('cursor', 'pointer')\n          .attr(\n            'd',\n            d3\n              .line()\n              .x((d) => {\n                return x(new Date(d['date'] + '2020'))\n              })\n              .y((d) => {\n                if (mode) return yScales[0](d[dataTypes[i]])\n                return yScales[i](d[dataTypes[i]])\n              })\n              .curve(d3.curveCardinal),\n          )\n        dots.attr('r', 3)\n      } else {\n        s.selectAll('stem-line')\n          .data(data)\n          .enter()\n          .append('line')\n          .attr('x1', (d) => {\n            return x(new Date(d['date'] + '2020'))\n          })\n          .attr('y1', height)\n          .attr('x2', (d) => {\n            return x(new Date(d['date'] + '2020'))\n          })\n          .attr('y2', (d) => {\n            return mode\n              ? yScales[0](d[dataTypes[i]])\n              : yScales[i](d[dataTypes[i]])\n          })\n          .style('stroke', colors[i] + '99')\n          .style('stroke-width', 4)\n        dots.attr('r', 2)\n      }\n    })\n  }\n\n  return (\n    <div\n      className=\"TimeSeries-Parent fadeInUp\"\n      style={{ animationDelay: '1.7s' }}\n    >\n      <div\n        className=\"timeseries\"\n        style={{ display: props.type === 1 ? 'flex' : 'none' }}\n      >\n        <div className=\"svg-parent\">\n          <div className=\"stats\">\n            <h5>Confirmed {datapoint['date']}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totalconfirmed']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totalconfirmed'] -\n                      timeseries[index - 1]['totalconfirmed'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totalconfirmed'] -\n                        timeseries[index - 1]['totalconfirmed'])\n                    : timeseries[index]['totalconfirmed'] -\n                      timeseries[index - 1]['totalconfirmed']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement1}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5>Recovered {datapoint['date']}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totalrecovered']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totalrecovered'] -\n                      timeseries[index - 1]['totalrecovered'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totalrecovered'] -\n                        timeseries[index - 1]['totalrecovered'])\n                    : timeseries[index]['totalrecovered'] -\n                      timeseries[index - 1]['totalrecovered']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement2}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5>\n              Deceased <br />\n              {datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['totaldeceased']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['totaldeceased'] -\n                      timeseries[index - 1]['totaldeceased'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['totaldeceased'] -\n                        timeseries[index - 1]['totaldeceased'])\n                    : timeseries[index]['totaldeceased'] -\n                      timeseries[index - 1]['totaldeceased']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement3}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"timeseries\"\n        style={{ display: props.type === 2 ? 'flex' : 'none' }}\n      >\n        <div className=\"svg-parent\">\n          <div className=\"stats\">\n            <h5>Confirmed {datapoint['date']}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailyconfirmed']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailyconfirmed'] -\n                      timeseries[index - 1]['dailyconfirmed'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailyconfirmed'] -\n                        timeseries[index - 1]['dailyconfirmed'])\n                    : timeseries[index]['dailyconfirmed'] -\n                      timeseries[index - 1]['dailyconfirmed']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement4}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5>Recovered {datapoint['date']}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailyrecovered']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailyrecovered'] -\n                      timeseries[index - 1]['dailyrecovered'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailyrecovered'] -\n                        timeseries[index - 1]['dailyrecovered'])\n                    : timeseries[index]['dailyrecovered'] -\n                      timeseries[index - 1]['dailyrecovered']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement5}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5>\n              Deceased <br />\n              {datapoint['date']}\n            </h5>\n            <div className=\"stats-bottom\">\n              <h2>{datapoint['dailydeceased']}</h2>\n              <h6>\n                {timeseries.length > 0 && index !== 0\n                  ? timeseries[index]['dailydeceased'] -\n                      timeseries[index - 1]['dailydeceased'] >=\n                    0\n                    ? '+' +\n                      (timeseries[index]['dailydeceased'] -\n                        timeseries[index - 1]['dailydeceased'])\n                    : timeseries[index]['dailydeceased'] -\n                      timeseries[index - 1]['dailydeceased']\n                  : ''}\n              </h6>\n            </div>\n          </div>\n          <svg\n            ref={graphElement6}\n            width=\"650\"\n            height=\"200\"\n            viewBox=\"0 0 650 200\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TimeSeries\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useRef } from 'react'\nimport * as d3 from 'd3'\n\nfunction Minigraph(props) {\n  const [timeseries, setTimeseries] = useState([])\n  const graphElement1 = useRef(null)\n  const graphElement2 = useRef(null)\n  const graphElement3 = useRef(null)\n  const graphElement4 = useRef(null)\n\n  useEffect(() => {\n    if (props.timeseries.length > 1) {\n      setTimeseries(props.timeseries.slice(props.timeseries.length - 10))\n    }\n  }, [props.timeseries])\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries)\n    }\n  }, [timeseries.length])\n\n  const svg1 = d3.select(graphElement1.current)\n  const margin = { top: 30, right: 5, bottom: 30, left: 0 }\n  const width = 100 - margin.left - margin.right\n  const height = 100 - margin.top - margin.bottom\n\n  const svg2 = d3.select(graphElement2.current)\n  const svg3 = d3.select(graphElement3.current)\n  const svg4 = d3.select(graphElement4.current)\n\n  function graphData(timeseries) {\n    const data = timeseries\n\n    const x = d3\n      .scaleTime()\n      .domain(\n        d3.extent(data, function (d) {\n          return new Date(d['date'] + '2020')\n        }),\n      )\n      .range([0, width])\n\n    const y1 = d3\n      .scaleLinear()\n      .domain([\n        0,\n        d3.max(data, function (d) {\n          return +d['dailyconfirmed']\n        }),\n      ])\n      .range([height, 0])\n\n    const path1 = svg1\n      .append('path')\n      .datum(data)\n      .attr('fill', 'none')\n      .attr('stroke', '#ff073a99')\n      .attr('stroke-width', 3)\n      .attr('cursor', 'pointer')\n      .attr(\n        'd',\n        d3\n          .line()\n          .x(function (d) {\n            return x(new Date(d['date'] + '2020'))\n          })\n          .y(function (d, i) {\n            if (i === 0) {\n              {\n                /* console.log(data[data.length-9]['dailyconfirmed']-data[data.length-10]['dailyconfirmed']);*/\n              }\n              return y1(d['dailyconfirmed'])\n            } else {\n              {\n                /* console.log(data[data.length-9+i]['dailyconfirmed']-data[data.length-10+i]['dailyconfirmed']);*/\n              }\n              return y1(d['dailyconfirmed'])\n            }\n          })\n          .curve(d3.curveCardinal),\n      )\n\n    const totalLength1 = path1.node().getTotalLength()\n    path1\n      .attr('stroke-dasharray', totalLength1 + ' ' + totalLength1)\n      .attr('stroke-dashoffset', totalLength1)\n      .transition()\n      .duration(props.animate ? 2000 : 0)\n      .attr('stroke-dashoffset', 0)\n\n    svg1\n      .selectAll('.dot')\n      .data(data.slice(data.length - 1))\n      .enter()\n      .append('circle')\n      .attr('fill', '#ff073a')\n      .attr('stroke', '#ff073a')\n      .attr('r', 2)\n      .attr('cursor', 'pointer')\n      .attr('cx', function (d) {\n        return x(new Date(d['date'] + '2020'))\n      })\n      .attr('cy', function (d) {\n        return y1(d['dailyconfirmed'])\n      })\n      .on('mouseover', (d) => {\n        d3.select(d3.event.target).attr('r', '5')\n      })\n      .on('mouseout', (d) => {\n        d3.select(d3.event.target).attr('r', '2')\n      })\n      .style('opacity', 0)\n      .transition()\n      .duration(props.animate ? 3000 : 0)\n      .style('opacity', 1)\n\n    const path2 = svg2\n      .append('path')\n      .datum(data)\n      .attr('fill', 'none')\n      .attr('cursor', 'pointer')\n      .attr('stroke', '#007bff99')\n      .attr('stroke-width', 3)\n      .attr('cursor', 'pointer')\n      .attr('cursor', 'pointer')\n      .attr(\n        'd',\n        d3\n          .line()\n          .x(function (d) {\n            return x(new Date(d['date'] + '2020'))\n          })\n          .y(function (d, i) {\n            if (i === 0) {\n              return y1(\n                d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased'],\n              )\n            } else {\n              return y1(\n                d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased'],\n              )\n            }\n          })\n          .curve(d3.curveCardinal),\n      )\n\n    const totalLength2 = path2.node().getTotalLength()\n    path2\n      .attr('stroke-dasharray', totalLength2 + ' ' + totalLength2)\n      .attr('stroke-dashoffset', totalLength2)\n      .transition()\n      .duration(props.animate ? 2000 : 0)\n      .attr('stroke-dashoffset', 0)\n\n    svg2\n      .selectAll('.dot')\n      .data(data.slice(data.length - 1))\n      .enter()\n      .append('circle')\n      .attr('fill', '#007bff')\n      .attr('stroke', '#007bff')\n      .attr('r', 2)\n      .attr('cursor', 'pointer')\n      .attr('cx', function (d) {\n        return x(new Date(d['date'] + '2020'))\n      })\n      .attr('cy', function (d) {\n        return y1(\n          d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased'],\n        )\n      })\n      .on('mouseover', (d) => {\n        d3.select(d3.event.target).attr('r', '5')\n      })\n      .on('mouseout', (d) => {\n        d3.select(d3.event.target).attr('r', '2')\n      })\n      .style('opacity', 0)\n      .transition()\n      .duration(props.animate ? 3000 : 0)\n      .style('opacity', 1)\n\n    const path3 = svg3\n      .append('path')\n      .datum(data)\n      .attr('fill', 'none')\n      .attr('stroke', '#28a74599')\n      .attr('stroke-width', 3)\n      .attr('cursor', 'pointer')\n      .attr(\n        'd',\n        d3\n          .line()\n          .x(function (d) {\n            return x(new Date(d['date'] + '2020'))\n          })\n          .y(function (d, i) {\n            if (i === 0) {\n              return y1(d['dailyrecovered'])\n            } else {\n              return y1(d['dailyrecovered'])\n            }\n          })\n          .curve(d3.curveCardinal),\n      )\n\n    const totalLength3 = path1.node().getTotalLength()\n    path3\n      .attr('stroke-dasharray', totalLength3 + ' ' + totalLength3)\n      .attr('stroke-dashoffset', totalLength3)\n      .transition()\n      .duration(props.animate ? 2000 : 0)\n      .attr('stroke-dashoffset', 0)\n\n    svg3\n      .selectAll('.dot')\n      .data(data.slice(data.length - 1))\n      .enter()\n      .append('circle')\n      .attr('fill', '#28a745')\n      .attr('stroke', '#28a745')\n      .attr('r', 2)\n      .attr('cursor', 'pointer')\n      .attr('cx', function (d) {\n        return x(new Date(d['date'] + '2020'))\n      })\n      .attr('cy', function (d) {\n        return y1(d['dailyrecovered'])\n      })\n      .on('mouseover', (d) => {\n        d3.select(d3.event.target).attr('r', '5')\n      })\n      .on('mouseout', (d) => {\n        d3.select(d3.event.target).attr('r', '2')\n      })\n      .style('opacity', 0)\n      .transition()\n      .duration(props.animate ? 3000 : 0)\n      .style('opacity', 1)\n\n    const path4 = svg4\n      .append('path')\n      .datum(data)\n      .attr('fill', 'none')\n      .attr('cursor', 'pointer')\n      .attr('stroke', '#6c757d99')\n      .attr('stroke-width', 3)\n      .attr('cursor', 'pointer')\n      .attr('cursor', 'pointer')\n      .attr(\n        'd',\n        d3\n          .line()\n          .x(function (d) {\n            return x(new Date(d['date'] + '2020'))\n          })\n          .y(function (d, i) {\n            if (i === 0) {\n              return y1(d['dailydeceased'])\n            } else {\n              return y1(d['dailydeceased'])\n            }\n          })\n          .curve(d3.curveCardinal),\n      )\n\n    const totalLength4 = path4.node().getTotalLength()\n    path4\n      .attr('stroke-dasharray', totalLength4 + ' ' + totalLength4)\n      .attr('stroke-dashoffset', totalLength4)\n      .transition()\n      .duration(props.animate ? 2000 : 0)\n      .attr('stroke-dashoffset', 0)\n\n    svg4\n      .selectAll('.dot')\n      .data(data.slice(data.length - 1))\n      .enter()\n      .append('circle')\n      .attr('fill', '#6c757d')\n      .attr('stroke', '#6c757d')\n      .attr('r', 2)\n      .attr('cursor', 'pointer')\n      .attr('cx', function (d) {\n        return x(new Date(d['date'] + '2020'))\n      })\n      .attr('cy', function (d) {\n        return y1(d['dailydeceased'])\n      })\n      .on('mouseover', (d) => {\n        d3.select(d3.event.target).attr('r', '5')\n      })\n      .on('mouseout', (d) => {\n        d3.select(d3.event.target).attr('r', '2')\n      })\n      .style('opacity', 0)\n      .transition()\n      .duration(props.animate ? 3000 : 0)\n      .style('opacity', 1)\n  }\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{ animationDelay: '0.6s' }}>\n        <svg\n          ref={graphElement1}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{ animationDelay: '0.7s' }}\n      >\n        <svg\n          ref={graphElement2}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{ animationDelay: '0.8s' }}\n      >\n        <svg\n          ref={graphElement3}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{ animationDelay: '0.9s' }}\n      >\n        <svg\n          ref={graphElement4}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Minigraph\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { zonedTimeToUtc } from 'date-fns-tz'\nimport { formatDistance } from 'date-fns'\n\nimport Table from './table'\nimport Level from './level'\nimport MapExplorer from './mapexplorer'\nimport TimeSeries from './timeseries'\nimport Minigraph from './minigraph'\n\nfunction Home(props) {\n  const [states, setStates] = useState([])\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({})\n  const [fetched, setFetched] = useState(false)\n  const [graphOption, setGraphOption] = useState(1)\n  const [lastUpdated, setLastUpdated] = useState('')\n  const [timeseries, setTimeseries] = useState([])\n  const [deltas, setDeltas] = useState([])\n  const [timeseriesMode, setTimeseriesMode] = useState(true)\n  const [stateHighlighted, setStateHighlighted] = useState(undefined)\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates()\n    }\n  }, [fetched])\n\n  const getStates = async () => {\n    try {\n      const [response, stateDistrictWiseResponse] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n      ])\n      setStates(response.data.statewise)\n      setTimeseries(response.data.cases_time_series)\n      setLastUpdated(response.data.statewise[0].lastupdatedtime)\n      setDeltas(response.data.key_values[0])\n      setStateDistrictWiseData(stateDistrictWiseResponse.data)\n      setFetched(true)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const formatDate = (unformattedDate) => {\n    const day = unformattedDate.slice(0, 2)\n    const month = unformattedDate.slice(3, 5)\n    const year = unformattedDate.slice(6, 10)\n    const time = unformattedDate.slice(11)\n    return `${year}-${month}-${day}T${time}`\n  }\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) setStateHighlighted(null)\n    else setStateHighlighted({ state, index })\n  }\n\n  return (\n    <div className=\"Home\">\n      <div className=\"home-left\">\n        <div className=\"header fadeInUp\" style={{ animationDelay: '0.5s' }}>\n          <div className=\"header-mid\">\n            <div className=\"titles\">\n              <h1>India COVID-19 Tracker</h1>\n              <h6>A Crowdsourced Initiative</h6>\n            </div>\n            <div className=\"last-update\">\n              <h6>Last Updated</h6>\n              <h3>\n                {isNaN(Date.parse(formatDate(lastUpdated)))\n                  ? ''\n                  : formatDistance(\n                      zonedTimeToUtc(\n                        new Date(formatDate(lastUpdated)),\n                        'Asia/Calcutta',\n                      ),\n                      zonedTimeToUtc(new Date()),\n                    ) + ' Ago'}\n              </h3>\n            </div>\n          </div>\n        </div>\n\n        <Level data={states} deltas={deltas} />\n        <Minigraph timeseries={timeseries} animate={true} />\n\n        <Table\n          states={states}\n          summary={false}\n          onHighlightState={onHighlightState}\n        />\n      </div>\n\n      <div className=\"home-right\">\n        {fetched && (\n          <React.Fragment>\n            <MapExplorer\n              states={states}\n              stateDistrictWiseData={stateDistrictWiseData}\n              stateHighlighted={stateHighlighted}\n            />\n\n            <div\n              className=\"timeseries-header fadeInUp\"\n              style={{ animationDelay: '1.5s' }}\n            >\n              <h1>Spread Trends</h1>\n              <div className=\"tabs\">\n                <div\n                  className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                  onClick={() => {\n                    setGraphOption(1)\n                  }}\n                >\n                  <h4>Cumulative</h4>\n                </div>\n                <div\n                  className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                  onClick={() => {\n                    setGraphOption(2)\n                  }}\n                >\n                  <h4>Daily</h4>\n                </div>\n              </div>\n\n              <div className=\"timeseries-mode\">\n                <label htmlFor=\"timeseries-mode\">Scale Uniformly</label>\n                <input\n                  type=\"checkbox\"\n                  checked={timeseriesMode}\n                  onChange={(event) => {\n                    setTimeseriesMode(!timeseriesMode)\n                  }}\n                />\n              </div>\n            </div>\n\n            <TimeSeries\n              timeseries={timeseries}\n              type={graphOption}\n              mode={timeseriesMode}\n            />\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Navbar(props) {\n  const [view, setView] = useState('Home')\n\n  if (window.location.pathname !== '/summary') {\n    return (\n      <div\n        className=\"Navbar\"\n        style={{\n          animationDelay: '0.5s',\n          height: view === 'Clusters' ? '2.5rem' : '',\n          transition: 'all 0.3s ease-in-out',\n        }}\n      >\n        <img\n          className=\"fadeInUp\"\n          src=\"/icon.png\"\n          style={{\n            animationDelay: '0.0s',\n            width: view === 'Clusters' ? '1.5rem' : '',\n            height: view === 'Clusters' ? '1.5rem' : '',\n            transition: 'all 0.3s ease-in-out',\n          }}\n        />\n\n        <div className=\"navbar-left\">\n          <Link\n            to=\"/\"\n            onClick={() => {\n              setView('Home')\n            }}\n          >\n            <span\n              className={`fadeInUp ${view === 'Home' ? 'focused' : ''}`}\n              style={{ animationDelay: '0.2s' }}\n            >\n              Home\n            </span>\n          </Link>\n\n          {/* <Link to=\"/updates\" onClick={()=>{\n            setView('Updates');\n          }}>\n            <span className={`fadeInUp ${view==='Updates' ? 'focused' : ''}`} style={{animationDelay: '0.2s'}}>Updates</span>\n          </Link>*/}\n\n          <Link\n            to=\"/clusters\"\n            onClick={() => {\n              setView('Clusters')\n            }}\n          >\n            <span\n              className={`fadeInUp ${view === 'Network Map' ? 'focused' : ''}`}\n              style={{ animationDelay: '0.3s' }}\n            >\n              Clusters\n            </span>\n          </Link>\n\n          <Link\n            to=\"/links\"\n            onClick={() => {\n              setView('Helpful Links')\n            }}\n          >\n            <span\n              className={`fadeInUp ${\n                view === 'Helpful Links' ? 'focused' : ''\n              }`}\n              style={{ animationDelay: '0.4s' }}\n            >\n              Helpful Links\n            </span>\n          </Link>\n\n          <Link\n            to=\"/faq\"\n            onClick={() => {\n              setView('FAQs')\n            }}\n          >\n            <span\n              className={`fadeInUp ${view === 'FAQs' ? 'focused' : ''}`}\n              style={{ animationDelay: '0.4s' }}\n            >\n              FAQ\n            </span>\n          </Link>\n        </div>\n\n        <div className=\"navbar-right\"></div>\n      </div>\n    )\n  } else {\n    return <div></div>\n  }\n}\n\nexport default Navbar\n","import React from 'react'\n\nfunction Links(props) {\n  return (\n    <div className=\"Links\">\n      <div className=\"link fadeInUp\" style={{ animationDelay: '0.2s' }}>\n        <h3>HELPLINE NUMBERS [by State]</h3>\n        <a href=\"https://www.mohfw.gov.in/coronvavirushelplinenumber.pdf\">\n          https://www.mohfw.gov.in/coronvavirushelplinenumber.pdf\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{ animationDelay: '0.3s' }}>\n        <h3>Ministry of Health and Family Welfare, Gov. of India</h3>\n        <a href=\"https://www.mohfw.gov.in/\">https://www.mohfw.gov.in/</a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{ animationDelay: '0.4s' }}>\n        <h3>WHO : COVID-19 Home Page</h3>\n        <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\">\n          https://www.who.int/emergencies/diseases/novel-coronavirus-2019\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{ animationDelay: '0.5s' }}>\n        <h3>CDC</h3>\n        <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html\">\n          https://www.cdc.gov/coronavirus/2019-ncov/faq.html\n        </a>\n      </div>\n\n      <div className=\"link fadeInUp\" style={{ animationDelay: '0.6s' }}>\n        <h3>COVID-19 Global Tracker</h3>\n        <a href=\"https://coronavirus.thebaselab.com/\">\n          https://coronavirus.thebaselab.com/\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default Links\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport Level from './level'\nimport Minigraph from './minigraph'\nimport Table from './table'\n\nfunction Summary(props) {\n  const [states, setStates] = useState([])\n  const [deltas, setDeltas] = useState([])\n  const [timeseries, setTimeseries] = useState([])\n  const [fetched, setFetched] = useState(false)\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates()\n    }\n  }, [fetched])\n\n  const getStates = () => {\n    axios\n      .get('https://api.covid19india.org/data.json')\n      .then((response) => {\n        setStates(response.data.statewise)\n        setDeltas(response.data.key_values[0])\n        setTimeseries(response.data.cases_time_series)\n        setFetched(true)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  return (\n    <div className=\"Summary\">\n      <div className=\"header fadeInUp\" style={{ animationDelay: '0.5s' }}>\n        <h1>India COVID-19 Tracker</h1>\n      </div>\n\n      <Minigraph timeseries={timeseries} animate={false} />\n      <Level data={states} deltas={deltas} />\n      <Table states={states} summary={true} />\n\n      <div className=\"summary-bottom\">\n        <div className=\"summary-bottom-left\">\n          <img src=\"icon.png\" alt=\"logo\" />\n          <h5>We stand with everyone fighting on the frontlines</h5>\n        </div>\n        <div className=\"link\">\n          <a href=\"https://github.com/covid19india\">covid19india.org</a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Summary\n","import React from 'react'\n\nfunction Cluster(props) {\n  return (\n    <div className=\"iframe-container\" referrerPolicy=\"no-referrer\" width=\"100%\">\n      <iframe src=\"https://cluster.covid19india.org\"></iframe>\n    </div>\n  )\n}\n\nexport default Cluster\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction FAQ(props) {\n  const [faq, setFaq] = useState([])\n\n  useEffect(() => {\n    getFAQs()\n  }, [1])\n\n  const getFAQs = () => {\n    axios\n      .get('https://api.covid19india.org/faq.json')\n      .then((response) => {\n        setFaq(response.data.faq)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  return (\n    <div className=\"FAQ\">\n      {faq.map((faq, index) => {\n        return (\n          <div\n            key={index}\n            className=\"faq fadeInUp\"\n            style={{ animationDelay: `${0.5 + index * 0.1}s` }}\n          >\n            <h2 className=\"question\">{faq.question}</h2>\n            <h2 className=\"answer\">{faq.answer}</h2>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default FAQ\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react'\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds'\nimport axios from 'axios'\n\nfunction Banner(props) {\n  const [snippets, setSnippets] = useState([])\n  const [snippet, setSnippet] = useState()\n  const [start] = useState(\n    props.start\n      ? new Date(props.date)\n      : localStorage.getItem('start') === 'null'\n      ? new Date()\n      : new Date(localStorage.getItem('start')),\n  )\n  const [difference, setDifference] = useState(\n    new Date(differenceInMilliseconds(new Date(), start))\n      .toISOString()\n      .slice(11, 19),\n  )\n\n  useEffect(() => {\n    getSnippets()\n  }, [1])\n\n  useEffect(() => {\n    if (snippets.length > 1) {\n      setSnippet(snippets[0])\n    }\n  }, [snippets])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDifference(\n        new Date(differenceInMilliseconds(new Date(), start))\n          .toISOString()\n          .slice(11, 19),\n      )\n    }, 10000)\n    snippetChooser(0, snippets.length - 1)\n    return () => clearInterval(interval)\n  }, [difference])\n\n  const snippetChooser = (min, max) => {\n    const index = Math.random() * (max - min) + min\n    setSnippet(snippets[Math.floor(index)])\n  }\n\n  const getSnippets = () => {\n    axios\n      .get('https://api.covid19india.org/website_data.json')\n      .then((response) => {\n        setSnippets(response.data.factoids)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  return (\n    <div\n      onClick={() => snippetChooser(0, snippets.length - 1)}\n      className=\"Banner fadeInUp\"\n      style={{ animationDelay: '0.2s' }}\n    >\n      <div className=\"snippet\">{snippet ? snippet.banner : ''} &nbsp;</div>\n    </div>\n  )\n}\n\nexport default Banner\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom'\nimport * as Icon from 'react-feather'\n\nimport './App.scss'\nimport Home from './components/home'\nimport Navbar from './components/navbar'\nimport Links from './components/links'\nimport Summary from './components/summary'\nimport Cluster from './components/cluster'\nimport FAQ from './components/faq'\nimport Banner from './components/banner'\n\n// eslint-disable-next-line no-undef\nconst history = require('history').createBrowserHistory\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Route\n          render={({ location }) => (\n            <div className=\"Almighty-Router\">\n              <Navbar />\n              <Banner />\n              <Route exact path=\"/\" render={() => <Redirect to=\"/\" />} />\n              <Switch location={location}>\n                <Route exact path=\"/\" render={(props) => <Home {...props} />} />\n                <Route\n                  exact\n                  path=\"/links\"\n                  render={(props) => <Links {...props} />}\n                />\n                <Route\n                  exact\n                  path=\"/summary\"\n                  render={(props) => <Summary {...props} />}\n                />\n                <Route\n                  exact\n                  path=\"/clusters\"\n                  render={(props) => <Cluster {...props} />}\n                />\n                <Route\n                  exact\n                  path=\"/faq\"\n                  render={(props) => <FAQ {...props} />}\n                />\n              </Switch>\n            </div>\n          )}\n        />\n      </Router>\n      <footer className=\"fadeInUp\" style={{ animationDelay: '2s' }}>\n        <img src=\"/icon.png\" alt=\"logo\" />\n        <h5>We stand with everyone fighting on the frontlines</h5>\n        <div className=\"link\">\n          <a href=\"https://github.com/covid19india\">covid19india</a>\n        </div>\n        <div id=\"footerButtons\">\n          <a\n            className=\"button\"\n            href=\"https://bit.ly/patientdb\"\n            target=\"_noblank\"\n          >\n            <Icon.Database />\n            <span>Crowdsourced Patient Database&nbsp;</span>\n          </a>\n          <a\n            href=\"https://bit.ly/covid19crowd\"\n            className=\"button telegram\"\n            target=\"_noblank\"\n          >\n            <Icon.MessageCircle />\n            <span>Join Telegram to Collaborate!</span>\n          </a>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}